; CONTEXTO DA URA DE ATENDIMENTO PERSONALIZADA

[from-internal]

EXTEN => 6000,1,VERBOSE("INICIANDO A URA")
SAME  => n,Answer()


SAME  => n,Background(SALDACAO)
SAME  => n,GOTO(CHECA-ATENDIMENTO,s,1)

; ==================== URA INTEGRADA ============================
EXTEN => 5000,1,VERBOSE("INICIANDO A URA")
SAME  => n,Answer()
SAME  => n,GotoIfTime(00:00-11:59,,*,*?DIA); DIA
SAME  => n,GotoIfTime(12:00-17:59,,*,*?TARDE); DIA
SAME  => n,GotoIfTime(18:00-23:59,,*,*?NOITE); DIA
SAME  => n(DIA),PLAYBACK(BOM-DIA_G711.org_)
SAME  => n,GOTO(HORA,s,1)
SAME  => n(TARDE),PLAYBACK(BOA-TARDE_G711.org_)
SAME  => n,GOTO(HORA,s,1)
SAME  => n(NOITE),PLAYBACK(BOA-NOITE_G711.org_)
SAME  => n,GOTO(HORA,s,1)


[HORA]

EXTEN => s,1,NoOp(Controle de Horario e Dias de Atendimento)
SAME  => n,NoOp(===== Validando Feriados Federais =======)
SAME  => n,GotoIfTime(*,*,1,jan?FORADEATENDIMENTO); Confraternização Universal
SAME  => n,GotoIfTime(*,*,12,jan?FORADEATENDIMENTO) ; Carnaval
SAME  => n,GotoIfTime(*,*,29,mar?FORADEATENDIMENTO) ; Paixao de Cristo
SAME  => n,GotoIfTime(*,*,21,apr?FORADEATENDIMENTO) ; Tiradentes
SAME  => n,GotoIfTime(*,*,1,may?FORADEATENDIMENTO) ; Dia do Trabalho
SAME  => n,GotoIfTime(*,*,30,may?FORADEATENDIMENTO) ; Corpus Christi (Facultativo)
SAME  => n,GotoIfTime(*,*,7,sep?FORADEATENDIMENTO) ; Independencia do Brasil
SAME  => n,GotoIfTime(*,*,12,oct?FORADEATENDIMENTO) ; Nossa Sr. Aparecida / Dia das Crianças (Facultativo) 
SAME  => n,GotoIfTime(*,*,2,nov?FORADEATENDIMENTO) ; Finados
SAME  => n,GotoIfTime(*,*,15,nov?FORADEATENDIMENTO) ; Proclamacao da Republica
SAME  => n,GotoIfTime(*,*,25,dec?FORADEATENDIMENTO) ; Natal / Nascimento de Cristo (Facultativo)
SAME  => n,NoOp(Controle de Horario e Dias de Atendimento)
SAME  => n,NoOp(=========================================)
SAME  => n,NoOp(===== Validando Feriados Federais =======)
SAME  => n,GotoIfTime(*,*,1,jan?FORADEATENDIMENTO); Confraternização Universal
SAME  => n,GotoIfTime(*,*,12,jan?FORADEATENDIMENTO) ; Carnaval
SAME  => n,GotoIfTime(*,*,29,mar?FORADEATENDIMENTO) ; Paixao de Cristo
SAME  => n,GotoIfTime(*,*,21,apr?FORADEATENDIMENTO) ; Tiradentes
SAME  => n,GotoIfTime(*,*,1,may?FORADEATENDIMENTO) ; Dia do Trabalho
SAME  => n,GotoIfTime(*,*,30,may?FORADEATENDIMENTO) ; Corpus Christi (Facultativo)
SAME  => n,GotoIfTime(*,*,7,sep?FORADEATENDIMENTO) ; Independencia do Brasil
SAME  => n,GotoIfTime(*,*,12,oct?FORADEATENDIMENTO) ; Nossa Sr. Aparecida / Dia das Crianças (Facultativo) 
SAME  => n,GotoIfTime(*,*,2,nov?FORADEATENDIMENTO) ; Finados
SAME  => n,GotoIfTime(*,*,15,nov?FORADEATENDIMENTO) ; Proclamacao da Republica
SAME  => n,GotoIfTime(*,*,25,dec?FORADEATENDIMENTO) ; Natal / Nascimento de Cristo (Facultativo)
SAME  => n,GotoIfTime(00:00-23:59,sun,*,*?FORADEATENDIMENTO); FORA DO HORARIO NO DOMINGO
SAME  => n,GotoIfTime(12:00-13:00,sat,*,*?FORADEATENDIMENTO); FORA DO HORARIO SABADO
SAME  => n,GotoIfTime(17:30-00:00,sat,*,*?FORADEATENDIMENTO); FORA DO HORARIO SABADO


SAME  => n,GotoIfTime(00:00-08:29,*,*?FORADEATENDIMENTO); FORA DO HORARIO SEMANA
SAME  => n,GotoIfTime(18:00-00:00,*,*?FORADEATENDIMENTO); FORA DO HORARIO SEMANA

SAME  => n,SET(ATENDIMENTO=1)
SAME  => n,GOTO(INICIO,s,1)
SAME  => n(FORADEATENDIMENTO),SET(ATENDIMENTO=0)
SAME  => n,GOTO(INICIO,s,1)

[INICIO]

EXTEN => s,1,PLAYBACK(INICIO_G711.org_)
SAME  => n,WAIT(2)
SAME  => n,READ(CPFCNPJ,INFO-CPF-CNPJ_G711.org_,14)
SAME  => n,Waitexten(5)
SAME  = n,AGI(ura_consulta.php,${CPFCNPJ})
SAME  = n,GotoIf($["${CPFCNPJ}" = ""]?NCLI)
SAME  = n,GotoIf($["${contratoId}" > "0"]?CLI)
SAME  = n,GotoIf($["${contratoId}" = ""]?DigitarNovamente)


SAME  = n(NCLI),GOTO(VENDAS,s,1)
SAME  = n(CLI),GOTO(CLIENTE,s,1)
SAME  = n(DigitarNovamente),Playback(DOCUMENTOINVALIDO-8khz)
SAME  = n,GOTO(INICIO,s,3) 

[CLIENTE]
EXTEN = s,1,GotoIf($["${bloqueado}" = "sim"]?BLOQ)
SAME  = n,GOTO(MENU-CLIENTE,s,1)
SAME  = n(BLOQ),GOTO(MENU-BLOQUEIO,s,1)

[MENU-BLOQUEIO]
EXTEN = s,1,BackGround(INFO-BLOQUEIO-8khz)
SAME  => n,BackGround(MENU-BLOQUEIO-8khz)
SAME  => n,Waitexten(5)
SAME  => n,PLAYBACK(SEM-OPCAO-8khz)
SAME  = n,HangUp()


; TRANSFERINDO PARA ATENDENTE
EXTEN => 1,1,NoOp("CHECANDO HORARIO PARA ATENDIMENTO")
SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()

; ENVIANDO FATURA
EXTEN = 2,1,Goto(ENVIA-FATURA,s,1)

; TRANSFERINDO PARA ATENDENTE
EXTEN => 3,1,NoOp("CHECANDO HORARIO PARA ATENDIMENTO")
SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()


;OPÇÃP INVALIDA
EXTEN = 4,1,Playback(NAOENTENDI-8khz)
SAME  = n,GOTO(MENU-BLOQUEIO,s,2)

EXTEN = 5,1,Playback(NAOENTENDI-8khz)
SAME  = n,GOTO(MENU-BLOQUEIO,s,2)

EXTEN = 6,1,Playback(NAOENTENDI-8khz)
SAME  = n,GOTO(MENU-BLOQUEIO,s,2)

EXTEN = 7,1,Playback(NAOENTENDI-8khz)
SAME  = n,GOTO(MENU-BLOQUEIO,s,2)

EXTEN = 8,1,Playback(NAOENTENDI-8khz)
SAME  = n,GOTO(MENU-BLOQUEIO,s,2)

EXTEN = 9,1,Playback(NAOENTENDI-8khz)
SAME  = n,GOTO(MENU-BLOQUEIO,s,2)

EXTEN = 0,1,Playback(NAOENTENDI-8khz)
SAME  = n,GOTO(MENU-BLOQUEIO,s,2)

; PRECISA INFORMAR O NUMERO DO WHATSAPP
[ENVIA-FATURA]
EXTEN = s,1,READ(WHATSAPP,DIGITA-WHATSAPP-8khz,14)
SAME  = n,Playback(ONUMERODIGITADOFOI-8khz)
SAME  = n,SayDigits(${WHATSAPP})
SAME  = n,Background(ESTACORRETO-8khz)
SAME  => n,Waitexten(5)

EXTEN = 1,1,GOTO(PREPARA-FATURA-E-ENVIA,s,1)


EXTEN = 2,1,GOTO(ENVIA-FATURA,s,1)


EXTEN = 3,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(ENVIA-FATURA,s,2)

EXTEN = 4,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(ENVIA-FATURA,s,2)

EXTEN = 5,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(ENVIA-FATURA,s,2)

EXTEN = 6,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(ENVIA-FATURA,s,2)

EXTEN = 7,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(ENVIA-FATURA,s,2)

EXTEN = 8,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(ENVIA-FATURA,s,2)

EXTEN = 9,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(ENVIA-FATURA,s,2)

EXTEN = 0,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(ENVIA-FATURA,s,2)


[PREPARA-FATURA-E-ENVIA]
EXTEN  = s,1,Playback(DEIXA_SO_EU_ENVIAR_AQUI-8khz)
SAME  = n,AGI(ura_consulta.php,${CPFCNPJ},${WHATSAPP})
SAME  = n,Playback(FATURAENVIADACOMSUCESSO-8khz)
SAME  = n,HangUp()

[MENU-CLIENTE]
EXTEN = s,1,Background(MENU-CLIENTE-8khz)
SAME  => n,Waitexten(5)
SAME  => n,PLAYBACK(SEM-OPCAO-8khz)
SAME  = n,HangUp()

; TRANSFERINDO PARA ATENDENTE
EXTEN => 1,1,NoOp("CHECANDO HORARIO PARA ATENDIMENTO")
SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()

; ENVIANDO FATURA
EXTEN = 2,1,Goto(ENVIA-FATURA,s,1)

; TRANSFERINDO PARA ATENDENTE
EXTEN => 3,1,NoOp("CHECANDO HORARIO PARA ATENDIMENTO")
SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()

; TRANSFERINDO PARA ATENDENTE
EXTEN => 4,1,NoOp("CHECANDO HORARIO PARA ATENDIMENTO")
SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()


EXTEN = 5,1,Playback(NAOENTENDI-8khz)
SAME  = n,GOTO(MENU-CLIENTE,s,2)

EXTEN = 6,1,Playback(NAOENTENDI-8khz)
SAME  = n,GOTO(MENU-CLIENTE,s,2)

EXTEN = 7,1,Playback(NAOENTENDI-8khz)
SAME  = n,GOTO(MENU-CLIENTE,s,2)

EXTEN = 8,1,Playback(NAOENTENDI-8khz)
SAME  = n,GOTO(MENU-CLIENTE,s,2)

EXTEN = 9,1,Playback(NAOENTENDI-8khz)
SAME  = n,GOTO(MENU-CLIENTE,s,2)

EXTEN = 0,1,Playback(NAOENTENDI-8khz)
SAME  = n,GOTO(MENU-CLIENTE,s,2)




[VENDAS]

EXTEN = s,1,Background(MENU-VENDAS-8khz)
SAME  => n,Waitexten(5)
SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()

EXTEN => 1,1,NoOp("CHECANDO HORARIO PARA ATENDIMENTO")
SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()

EXTEN => 2,1,NoOp("CHECANDO HORARIO PARA ATENDIMENTO")
SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()

EXTEN => 3,1,NoOp("CHECANDO HORARIO PARA ATENDIMENTO")
SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()



EXTEN => 4,1,NoOp("CHECANDO HORARIO PARA ATENDIMENTO")
SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()

EXTEN = 5,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(VENDAS,s1)

EXTEN = 6,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(VENDAS,s1)

EXTEN = 7,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(VENDAS,s1)

EXTEN = 8,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(VENDAS,s1)

EXTEN = 9,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(VENDAS,s1)

EXTEN = 0,1,Playback(NAOENTENDI-8khz)
SAME  = GOTO(VENDAS,s1)



; ==================== FIM DA URA INTEGRADA ======================





[CHECA-ATENDIMENTO]

EXTEN => s,1,NoOp(Controle de Horario e Dias de Atendimento)
SAME  => n,NoOp(===== Validando Feriados Federais =======)
SAME  => n,GotoIfTime(*,*,1,jan?FORADEATENDIMENTO); Confraternização Universal
SAME  => n,GotoIfTime(*,*,12,jan?FORADEATENDIMENTO) ; Carnaval
SAME  => n,GotoIfTime(*,*,29,mar?FORADEATENDIMENTO) ; Paixao de Cristo
SAME  => n,GotoIfTime(*,*,21,apr?FORADEATENDIMENTO) ; Tiradentes
SAME  => n,GotoIfTime(*,*,1,may?FORADEATENDIMENTO) ; Dia do Trabalho
SAME  => n,GotoIfTime(*,*,30,may?FORADEATENDIMENTO) ; Corpus Christi (Facultativo)
SAME  => n,GotoIfTime(*,*,7,sep?FORADEATENDIMENTO) ; Independencia do Brasil
SAME  => n,GotoIfTime(*,*,12,oct?FORADEATENDIMENTO) ; Nossa Sr. Aparecida / Dia das Crianças (Facultativo) 
SAME  => n,GotoIfTime(*,*,2,nov?FORADEATENDIMENTO) ; Finados
SAME  => n,GotoIfTime(*,*,15,nov?FORADEATENDIMENTO) ; Proclamacao da Republica
SAME  => n,GotoIfTime(*,*,25,dec?FORADEATENDIMENTO) ; Natal / Nascimento de Cristo (Facultativo)
SAME  => n,NoOp(Controle de Horario e Dias de Atendimento)
SAME  => n,NoOp(=========================================)
SAME  => n,NoOp(===== Validando Feriados Federais =======)
SAME  => n,GotoIfTime(*,*,1,jan?FORADEATENDIMENTO); Confraternização Universal
SAME  => n,GotoIfTime(*,*,12,jan?FORADEATENDIMENTO) ; Carnaval
SAME  => n,GotoIfTime(*,*,29,mar?FORADEATENDIMENTO) ; Paixao de Cristo
SAME  => n,GotoIfTime(*,*,21,apr?FORADEATENDIMENTO) ; Tiradentes
SAME  => n,GotoIfTime(*,*,1,may?FORADEATENDIMENTO) ; Dia do Trabalho
SAME  => n,GotoIfTime(*,*,30,may?FORADEATENDIMENTO) ; Corpus Christi (Facultativo)
SAME  => n,GotoIfTime(*,*,7,sep?FORADEATENDIMENTO) ; Independencia do Brasil
SAME  => n,GotoIfTime(*,*,12,oct?FORADEATENDIMENTO) ; Nossa Sr. Aparecida / Dia das Crianças (Facultativo) 
SAME  => n,GotoIfTime(*,*,2,nov?FORADEATENDIMENTO) ; Finados
SAME  => n,GotoIfTime(*,*,15,nov?FORADEATENDIMENTO) ; Proclamacao da Republica
SAME  => n,GotoIfTime(*,*,25,dec?FORADEATENDIMENTO) ; Natal / Nascimento de Cristo (Facultativo)
SAME  => n,GotoIfTime(00:00-23:59,sun,*,*?FORADEATENDIMENTO); FORA DO HORARIO NO DOMINGO
SAME  => n,GotoIfTime(12:00-13:00,sat,*,*?FORADEATENDIMENTO); FORA DO HORARIO SABADO
SAME  => n,GotoIfTime(17:30-00:00,sat,*,*?FORADEATENDIMENTO); FORA DO HORARIO SABADO


SAME  => n,GotoIfTime(00:00-08:29,*,*?FORADEATENDIMENTO); FORA DO HORARIO SEMANA
SAME  => n,GotoIfTime(18:00-00:00,*,*?FORADEATENDIMENTO); FORA DO HORARIO SEMANA

SAME  => n,SET(ATENDIMENTO=1)
SAME  => n,GOTO(URA,s,1)
SAME  => n(FORADEATENDIMENTO),SET(ATENDIMENTO=0)
SAME  => n,GOTO(URA,s,1)

[URA]
EXTEN => s,1,Background(OPCOES)
SAME  => n,Waitexten(5)

SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()

EXTEN => 1,1,NoOp("CHECANDO HORARIO PARA ATENDIMENTO")
SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()

EXTEN => 2,1,NoOp("CHECANDO HORARIO PARA ATENDIMENTO")
SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()

EXTEN => 3,1,NoOp("CHECANDO HORARIO PARA ATENDIMENTO")
SAME  => n,GotoIf($["${ATENDIMENTO}" = "0"]?FORA-DE-ATENDIMENTO)
SAME  => n,playback(TRANSFERINDO)
SAME  => n,Queue(1000,m,tTr,,,,)
SAME  => n,NoOp(Fora do Horario de Atendimento)
SAME  => n(FORA-DE-ATENDIMENTO),Playback(FORADOHORARIO)
SAME  => n,Hangup()

; OPÇÃO INVALIDA
EXTEN => 4,1,PLAYBACK(OPCAO-INVALIDA)
SAME  => n,GOTO(URA,s,1)
EXTEN => 5,1,PLAYBACK(OPCAO-INVALIDA)
SAME  => n,GOTO(URA,s,1)
EXTEN => 6,1,PLAYBACK(OPCAO-INVALIDA)
SAME  => n,GOTO(URA,s,1)
EXTEN => 7,1,PLAYBACK(OPCAO-INVALIDA)
SAME  => n,GOTO(URA,s,1)
EXTEN => 8,1,PLAYBACK(OPCAO-INVALIDA)
SAME  => n,GOTO(URA,s,1)
EXTEN => 9,1,PLAYBACK(OPCAO-INVALIDA)
SAME  => n,GOTO(URA,s,1)
EXTEN => 0,1,PLAYBACK(OPCAO-INVALIDA)
SAME  => n,GOTO(URA,s,1)


; FIM CONTEXTO DA URA DE ATENDIMENTO PERSONALIZADA





[from-internal-custom]				
exten => 1234,1,Playback(demo-congrats)		; extensions can dial 1234
exten => 1234,2,Hangup()
exten => h,1,Hangup()
include => custom-recordme			; extensions can also dial 5678 
include => weather-wakeup
include => calendar-event
include => conferences
include => agentlogin

; custom-count2four,s,1 can be used as a custom target for
; a Digital Receptionist menu or a Ring Group
[custom-count2four]		
exten => s,1,SayDigits(1234)
exten => s,2,Hangup

; custom-recordme,5678,1 can be used as a custom target for
; a Digital Receptionist menu or a Ring Group
[custom-recordme]
exten => 5678,1,Wait(2)
exten => 5678,2,Record(/tmp/asterisk-recording:gsm)
exten => 5678,3,Wait(2)
exten => 5678,4,Playback(/tmp/asterisk-recording)
exten => 5678,5,Wait(2)
exten => 5678,6,Hangup 

; This macro is for dev purposes and just dumps channel/app variables.  Useful when designing new contexts.
[macro-dumpvars]
exten => s,1,Noop(ACCOUNTCODE=${ACCOUNTCODE})
exten => s,2,Noop(ANSWEREDTIME=${ANSWEREDTIME})
exten => s,3,Noop(BLINDTRANSFER=${BLINDTRANSFER})
exten => s,4,Noop(CALLERID=${CALLERID(all)})
exten => s,5,Noop(CALLERID(name)=${CALLERID(name)})
exten => s,6,Noop(CALLERID(number)=${CALLERID(number)})
exten => s,7,Noop(CALLINGPRES=${CALLINGPRES})
exten => s,8,Noop(CHANNEL=${CHANNEL})
exten => s,9,Noop(CONTEXT=${CONTEXT})
exten => s,10,Noop(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => s,11,Noop(DIALEDPEERNAME=${DIALEDPEERNAME})
exten => s,12,Noop(DIALEDPEERNUMBER=${DIALEDPEERNUMBER})
exten => s,13,Noop(DIALEDTIME=${DIALEDTIME})
exten => s,14,Noop(DIALSTATUS=${DIALSTATUS})
exten => s,15,Noop(DNID=${CALLERID(dnid)})
exten => s,16,Noop(EPOCH=${EPOCH})
exten => s,17,Noop(EXTEN=${EXTEN})
exten => s,18,Noop(HANGUPCAUSE=${HANGUPCAUSE})
exten => s,19,Noop(INVALID_EXTEN=${INVALID_EXTEN})
exten => s,20,Noop(LANGUAGE=${LANGUAGE()})
exten => s,21,Noop(MEETMESECS=${MEETMESECS})
exten => s,22,Noop(PRIORITY=${PRIORITY})
exten => s,23,Noop(RDNIS=${CALLERID(rdnis)}})
exten => s,24,Noop(SIPDOMAIN=${SIPDOMAIN})
exten => s,25,Noop(SIP_CODEC=${SIP_CODEC})
exten => s,26,Noop(SIPCALLID=${SIPCALLID})
exten => s,27,Noop(SIPUSERAGENT=${SIPUSERAGENT})
exten => s,29,Noop(TXTCIDNAME=${TXTCIDNAME})
exten => s,30,Noop(UNIQUEID=${UNIQUEID})
exten => s,31,Noop(TOUCH_MONITOR=${TOUCH_MONITOR})
exten => s,32,Noop(MACRO_CONTEXT=${MACRO_CONTEXT})
exten => s,33,Noop(MACRO_EXTEN=${MACRO_EXTEN})
exten => s,34,Noop(MACRO_PRIORITY=${MACRO_PRIORITY})

[weather-wakeup]
exten => *61,1,Answer 
exten => *61,2,AGI(nv-weather.php) 
exten => *61,3,Hangup 
exten => *62,1,Answer 
exten => *62,2,AGI(wakeup.php) 
exten => *62,3,Hangup 

[calendar-event]
exten => _*7899,1,Answer                               
exten => _*7899,2,Playback(${FILE_CALL})
exten => _*7899,3,Wait(2)              
exten => _*7899,4,Hangup()

[mm-announce]
exten => 9999,1,Set(CALLERID(name)="MMGETOUT")
exten => 9999,n,Answer
exten => 9999,n,Playback(conf-will-end-in)
exten => 9999,n,Playback(digits/5)
exten => 9999,n,Playback(minutes)
exten => 9999,n,Hangup
 
[conferences]
;Used by cbEnd script to play end of conference warning
exten => 5555,1,Answer
exten => 5555,n,Wait(3)
exten => 5555,n,CBMysql()
exten => 5555,n,Hangup

[agentlogin]
exten => _*8888.,1,Set(AGENTNUMBER=${EXTEN:5})
exten => _*8888.,n,NoOp(AgentNumber is ${AGENTNUMBER})
exten => _*8888.,n,AgentLogin(${AGENTNUMBER})
exten => _*8888.,n,Hangup()




